# .github/workflows/ci.yaml
name: CI Pipeline
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 确保拉取完整的仓库历史
#      - name: Verify POM existence
#        run: |
#          if [ ! -f "pom.xml" ]; then
#            echo "Error: pom.xml not found!"
#            ls -la  # 调试目录结构
#            exit 1
#          fi
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      
      - name: Grant execute permission
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test
      

      - name: Login to Tencent Cloud Registry && Build and Push Docker Image
        run: |
          TIMESTAMP=$(date +%Y%m%d%H%M%S)
          docker login ccr.ccs.tencentyun.com -u 100017386823 -p "Qwe123123"

          docker build -t ccr.ccs.tencentyun.com/ci_cd/cicd-java-demo:$TIMESTAMP .
          docker push ccr.ccs.tencentyun.com/ci_cd/cicd-java-demo:$TIMESTAMP
          echo "IMAGE_TAG=$TIMESTAMP" >> $GITHUB_ENV
  deploy:
    needs: build
    if: success()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Update Helm values
        run: |
          sed -i "s|tag:.*|tag: ${{ env.IMAGE_TAG }}|" helm-chart/values.yaml
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add helm-chart/values.yaml
          git commit -m "Update image to ${{ env.IMAGE_TAG }} [skip ci]"
          git push

      - name: Trigger ArgoCD Sync
        uses: argoproj/argo-cd-github-actions@main
        with:
          argocd-server: ${{ secrets.ARGOCD_SERVER }}
          argocd-token: ${{ secrets.ARGOCD_TOKEN }}
          application-name: my-java-app


      - name: Send build success notification
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.126.com
          server_port: 456
          username: khlove2186@126.com 
#${{ secrets.MAIL_USERNAME }}
          password: RNU8yWHZANZZ4BJG
#${{ secrets.MAIL_PASSWORD }}
          subject: "CI Build Success - ${{ github.repository }}"
          body: "Build succeeded for ${{ github.repository }} commit ${{ github.sha }}"
          to: khlove2186@126.com
          from: khlove2186@126.com
